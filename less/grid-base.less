//****************************************************************** GRID BASE */
/*-------------------------------------- Box Sizing */
.box-sizing(@value){
	-webkit-box-sizing: @value;
	   -moz-box-sizing: @value;
		box-sizing: @value;
}
/*-------------------------------------- Grid Container */
.container_width(){
	width: @gridBaseContainer;
}
.container_width() when ( @gridResponsive = true ) and ( @gridType = pixels ) {
	@media @mediaLarge {
		width: @gridLargeContainer;
	}
	@media @mediaTablet {
		width: @gridTabletContainer;
	}
	@media @mediaMobile {
		width: @gridMobileContainer;
	}
}
.container_width() when ( @gridResponsive = true ) and ( @gridType = percentages ) {
	width: 90%;
}
/*-------------------------------------- Gutter Type */
.gutter() when ( @gridGutterInset = false ){
	margin-left: @gridGutter;
	margin-right: @gridGutter;
}
.gutter() when ( @gridGutterInset = true ){
	padding-left: @gridGutter;
	padding-right: @gridGutter;
}
/*-------------------------------------- Grid Specify Widths by Screen */
/* Large Screens */
.grid-large(@columns) when ( @gridGutterInset = false ){
	@media @mediaLarge {
		width: ( ( @gridLargeContainer / @gridColumns ) * @index ) - ( @gridGutter * 2 ) ;
	}
}
.grid-large(@columns) when ( @gridGutterInset = true ){
	@media @mediaLarge {
		width: ( @gridLargeContainer / @gridColumns ) * @index ;
	}
}
/* Tablet Screens */
.grid-tablet(@columns) when ( @gridGutterInset = false ){
	@media @mediaTablet {
		width: ( ( @gridTabletContainer / @gridColumns ) * @index ) - ( @gridGutter * 2 ) ;
	}
}
.grid-tablet(@columns) when ( @gridGutterInset = true ){
	@media @mediaTablet {
		width: ( @gridTabletContainer / @gridColumns ) * @index ;
	}
}
/* Mobile Screens */
.grid-mobile(@columns){
	@media @mediaMobile {
		float: none !important;
		width: @gridMobileContainer - ( @gridGutter * 2 );
		margin: 0 auto @gridMarginBottom auto;
	}
}
/*-------------------------------------- Grid Base Widths: Pixels */
/* Gutter Outset */
.grid(@columns) when ( @gridGutterInset = false ){
	width: ( ( @gridBaseContainer / @gridColumns ) * @index ) - ( @gridGutter * 2 );
}
.grid(@columns) when ( @gridResponsive = true ) and ( @gridType = pixels ) and ( @gridGutterInset = false ){
	.grid-large(@columns);
	.grid-tablet(@columns);
	.grid-mobile(@columns);
}
/* Gutter Inset */
.grid(@columns) when ( @gridGutterInset = true ){
	width: ( @gridBaseContainer / @gridColumns ) * @index;
}
.grid(@columns) when ( @gridResponsive = true ) and ( @gridType = pixels ) and ( @gridGutterInset = true ){
	.grid-large(@columns);
	.grid-tablet(@columns);
	.grid-mobile(@columns);
}

/*-------------------------------------- Grid Base Widths: Percentages */
.grid(@columns) when ( @gridResponsive = true ) and ( @gridType = percentages ){
	width: ( ( @columns * 100% ) / @gridColumns ) - ( @gridGutter * 2 );
	/* get Grids Width at the same way, except for mobiles */
	.grid-mobile(@columns);
}
/*-------------------------------------- Offsets */
.push(@columns) when ( @gridType = pixels ){
	margin-left: ( @gridBaseContainer / @gridColumns ) * @index;
	@media @mediaLarge {
		margin-left: ( @gridLargeContainer / @gridColumns ) * @index;
	}
	@media @mediaTablet {
		margin-left: ( @gridTabletContainer / @gridColumns ) * @index;
	}
	@media @mediaMobile {
		margin-left: ( @gridMobileContainer / @gridColumns ) * @index;
	}
}
.push(@columns) when ( @gridType = percentages ){
	margin-left: ( @columns * 100% ) / @gridColumns;
}

/*-------------------------------------- Grid Looping */
/* Normal Screen */
.gridX(@index) when ( @index > 0 ) {
	(~".@{gridPrefix}@{index}"){ .grid(@index); }
	.gridX(@index - 1);
}
.gridX(0){}

/* Large Screen */
.grid-largeX(@index) when ( @index > 0 ) {
	(~".@{gridPrefix}large-@{index}"){ .grid-large(@index); }
	.grid-largeX(@index - 1);
}
.grid-largeX(0){}

/* Tablet Screen */
.grid-tabletX(@index) when ( @index > 0 ) {
	(~".@{gridPrefix}tablet-@{index}"){ .grid-tablet(@index); }
	.grid-tabletX(@index - 1);
}
.grid-tabletX(0){}

/*-------------------------------------- Offset Looping */
.pushX(@index) when (@index > 0) {
	(~".push-@{index}") { .push(@index); }
	.pushX(@index - 1);
}
.pushX(0){}